name: Bump and Release

on:
  #pull_request:
  #  types: [ labeled ] # remove this to have it bumped for minor automatically OR it will use present labels to bump version
  #  branches:
  #    - main
  #    - master
  #    - "feat/INC-61"
  push:
    types: [ labeled ]
    branches:
    - "feat/INC-61"

jobs:
  bump-and-release:
    name: Bumps version and Release tag
    runs-on: ubuntu-latest

    steps:
      - name: Set 'patch' release by default
        run: |
          echo "debug : github.event.label.name = ${{ github.event.label.name }}" \
          && echo "BUMP=patch" >> $GITHUB_ENV
      - name: Check and set 'minor' release
        if: ${{ github.event.label.name == 'bump:minor' }}
        run: echo "BUMP=minor" >> $GITHUB_ENV
      - name: Check and set 'major' release
        if: ${{ github.event.label.name == 'bump:major' }}
        run: echo "BUMP=major" >> $GITHUB_ENV
      - name: Install semver-tool 
        # as standard ubuntu-latest doesn't have it
        run: |
          export DIR=$(mktemp -d)
          cd $DIR
          curl https://github.com/fsaintjacques/semver-tool/archive/3.2.0.tar.gz -L -o semver.tar.gz
          tar -xvf semver.tar.gz
          sudo cp semver-tool-3.2.0/src/semver /usr/local/bin
      - name: Get the codebase from the git repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup git
        run: |
          git config user.email "githubactions@planetpayment.com"
          git config user.name "GHA '${{ github.workflow }}' workflow, on behalf of ${{ github.actor }}."
          git fetch
#          git checkout
      - name: Bump version
        run: |
          TAG=$(git tag --sort=-creatordate | head -n 1) && \
          if [ -z "$TAG" ]; then TAG=0.0.0; fi && \
          export NEW_VERSION=$(semver bump ${{ env.BUMP }} $TAG) && \
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV
      - name: Modifying the CHANGELOG
        # if present
        run: |
          if [ -f "CHANGELOG.md" ]; then sed -i -e "1 i \#\#\ ${{ env.VERSION }}"; fi
      - name: Updating version on 'package.json'
        run: |
          sed -i "s|\"version\": \"[^\"]*\"|\"version\": \"${{ env.VERSION }}\"|" package.json 
          grep "version" package.json 
      - name: Commit changes
        run: |
          if [ -f "CHANGELOG.md" ]; then git add CHANGELOG.md; fi
          git add package.json
          git commit -m "Bump to version ${{ env.VERSION }}"
      - name: Pushing
        run: git push
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          #body_path: CHANGELOG.md
          #draft: false
          #prerelease: false